CREATE TABLE Users (
  user_id INT AUTO_INCREMENT PRIMARY KEY,
  username VARCHAR(50) NOT NULL UNIQUE,
  email VARCHAR(100) NOT NULL UNIQUE,
  phone_number VARCHAR(15),
  password_hash VARCHAR(255) NOT NULL,
  role ENUM('user', 'admin') NOT NULL,
  status ENUM('active', 'inactive') DEFAULT 'active',
  last_login DATETIME,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
ip_address VARCHAR(45),
browser_agent TEXT,
is_deleted BOOLEAN DEFAULT FALSE
);

CREATE TABLE Vendors (
  vendor_id INT AUTO_INCREMENT PRIMARY KEY,
  vendor_name VARCHAR(100) NOT NULL,
  vendor_code VARCHAR(20) NOT NULL UNIQUE,
  registration_details TEXT,
  address TEXT,
  item_type VARCHAR(50),
  logistics_method VARCHAR(50),
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
is_deleted BOOLEAN DEFAULT FALSE
);

CREATE TABLE Items (
  item_id INT AUTO_INCREMENT PRIMARY KEY,
  item_name VARCHAR(100) NOT NULL,
  item_code VARCHAR(20) NOT NULL UNIQUE,
  item_specification TEXT,
  item_type VARCHAR(50),
  pack_size INT,
  uom VARCHAR(20),
  latest_price DECIMAL(10,2),
  avg_price_10_batches DECIMAL(10,2),
  status ENUM('active', 'inactive') DEFAULT 'active',
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
is_deleted BOOLEAN DEFAULT FALSE
);

CREATE TABLE Vendor_Items (
  vendor_item_id INT AUTO_INCREMENT PRIMARY KEY,
  vendor_id INT NOT NULL,
  item_id INT NOT NULL,
  price DECIMAL(10,2),
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (vendor_id) REFERENCES Vendors(vendor_id),
  FOREIGN KEY (item_id) REFERENCES Items(item_id)
);

CREATE TABLE Stock_Rules (
  rule_id INT AUTO_INCREMENT PRIMARY KEY,
  item_id INT NOT NULL,
  moq INT,
  pack_size INT,
  pack_density DECIMAL(10,2),
  adr_mode ENUM('manual', 'auto'),
  adr_months INT,
  adr DECIMAL(10,2),
  lod INT,
  lod_stock INT,
  safety_stock INT,
  rol INT,
  max_stock INT,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (item_id) REFERENCES Items(item_id)
);

CREATE TABLE Activity_Log (
  log_id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  action VARCHAR(255) NOT NULL,
  table_name VARCHAR(100),
  record_id INT,
  description TEXT,
  timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

CREATE TABLE Locations (
  location_id INT AUTO_INCREMENT PRIMARY KEY,
  location_name VARCHAR(100),
  location_type VARCHAR(50),
  location_code VARCHAR(50),
  parent_location_id INT,
  qr_barcode VARCHAR(255),
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE Purchase_Orders (
  po_id INT AUTO_INCREMENT PRIMARY KEY,
  po_number VARCHAR(50),
  vendor_id INT,
  order_date DATE,
  status VARCHAR(50),
  total_amount DECIMAL(10,2),
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (vendor_id) REFERENCES Vendors(vendor_id),
is_deleted BOOLEAN DEFAULT FALSE
);

CREATE TABLE PO_Items (
  po_item_id INT AUTO_INCREMENT PRIMARY KEY,
  po_id INT,
  item_id INT,
  quantity INT,
  unit_price DECIMAL(10,2),
  total_price DECIMAL(10,2),
  tax_percent DECIMAL(5,2),
  gst_type ENUM('intra', 'inter'),
  cgst DECIMAL(10,2),
  sgst DECIMAL(10,2),
  igst DECIMAL(10,2),
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (po_id) REFERENCES Purchase_Orders(po_id),
  FOREIGN KEY (item_id) REFERENCES Items(item_id)
);

CREATE TABLE Material_Receipt_Notes (
  mrn_id INT AUTO_INCREMENT PRIMARY KEY,
  mrn_number VARCHAR(50),
  po_id INT,
  vendor_id INT,
  invoice_number VARCHAR(50),
  invoice_date DATE,
  receipt_date DATE,
  transaction_reference VARCHAR(100),
  scanned_by INT,
  received_by INT,
  total_invoice_value DECIMAL(10,2),
  qr_data_raw TEXT,
  tax_details_json TEXT,
  remarks TEXT,
  status VARCHAR(50),
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (po_id) REFERENCES Purchase_Orders(po_id),
  FOREIGN KEY (vendor_id) REFERENCES Vendors(vendor_id),
  FOREIGN KEY (scanned_by) REFERENCES Users(user_id),
  FOREIGN KEY (received_by) REFERENCES Users(user_id)
);

CREATE TABLE MRN_Items (
  mrn_item_id INT AUTO_INCREMENT PRIMARY KEY,
  mrn_id INT,
  po_id INT,
  item_id INT,
  quantity INT,
  batch_number VARCHAR(50),
  price DECIMAL(10,2),
  uom VARCHAR(20),
  expiry_date DATE,
  manufacture_date DATE,
  receiving_location_id INT,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (mrn_id) REFERENCES Material_Receipt_Notes(mrn_id),
  FOREIGN KEY (po_id) REFERENCES Purchase_Orders(po_id),
  FOREIGN KEY (item_id) REFERENCES Items(item_id),
  FOREIGN KEY (receiving_location_id) REFERENCES Locations(location_id)
);

CREATE TABLE Binning_Transactions (
  binning_id INT AUTO_INCREMENT PRIMARY KEY,
  transaction_id VARCHAR(50),
  mrn_id INT,
  from_location_id INT,
  to_location_id INT,
  scanned_by INT,
  binned_by_user_id INT,
  transaction_date DATETIME,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (mrn_id) REFERENCES Material_Receipt_Notes(mrn_id),
  FOREIGN KEY (from_location_id) REFERENCES Locations(location_id),
  FOREIGN KEY (to_location_id) REFERENCES Locations(location_id),
  FOREIGN KEY (scanned_by) REFERENCES Users(user_id),
  FOREIGN KEY (binned_by_user_id) REFERENCES Users(user_id)
);

CREATE TABLE Binning_Items (
  binning_item_id INT AUTO_INCREMENT PRIMARY KEY,
  binning_id INT,
  item_id INT,
  quantity INT,
  batch_number VARCHAR(50),
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (binning_id) REFERENCES Binning_Transactions(binning_id),
  FOREIGN KEY (item_id) REFERENCES Items(item_id)
);

CREATE TABLE VCP_Transactions (
  vcp_id INT AUTO_INCREMENT PRIMARY KEY,
  po_id INT,
  vendor_id INT,
  transaction_type VARCHAR(50),
  status VARCHAR(50),
  transaction_date DATETIME,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (po_id) REFERENCES Purchase_Orders(po_id),
  FOREIGN KEY (vendor_id) REFERENCES Vendors(vendor_id)
);

CREATE TABLE ASN_Notes (
  asn_id INT AUTO_INCREMENT PRIMARY KEY,
  po_id INT,
  vendor_id INT,
  expected_delivery_date DATE,
  remarks TEXT,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (po_id) REFERENCES Purchase_Orders(po_id),
  FOREIGN KEY (vendor_id) REFERENCES Vendors(vendor_id)
);

CREATE TABLE Inventory (
  inventory_id INT AUTO_INCREMENT PRIMARY KEY,
  item_id INT,
  location_id INT,
  quantity INT,
  last_updated DATETIME,
  FOREIGN KEY (item_id) REFERENCES Items(item_id),
  FOREIGN KEY (location_id) REFERENCES Locations(location_id)
);

CREATE TABLE MRN_Scans (
  scan_id INT AUTO_INCREMENT PRIMARY KEY,
  mrn_id INT,
  scanned_text TEXT,
  scanned_at DATETIME,
  scanned_by INT,
  FOREIGN KEY (mrn_id) REFERENCES Material_Receipt_Notes(mrn_id),
  FOREIGN KEY (scanned_by) REFERENCES Users(user_id)
);

CREATE TABLE Notifications (
  notification_id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT,
  message TEXT,
  is_read BOOLEAN DEFAULT FALSE,
  type ENUM('info', 'warning', 'error', 'system'),
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES Users(user_id)
);